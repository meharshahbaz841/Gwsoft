// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Task_111.Context;

namespace Task_111.Migrations
{
    [DbContext(typeof(Data_Context))]
    [Migration("20200817174433_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Task_111.Models.GL_CHART_OF_ACCOUNTS", b =>
                {
                    b.Property<int>("CONTROL_ACCOUNT_ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CONTROL_ACCOUNT_CODE")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("CREATED_BY")
                        .HasMaxLength(8);

                    b.Property<DateTime>("CREATION_DATE");

                    b.Property<string>("DESCRIPTION")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("GL_C_ACCOUNT_id");

                    b.Property<int?>("LAST_UPDATED_BY")
                        .HasMaxLength(8);

                    b.Property<DateTime?>("LAST_UPDATE_DATE");

                    b.Property<int?>("PARENT_CONTROL_ACCOUNT_ID");

                    b.Property<int?>("RECORD_LEVEL")
                        .HasMaxLength(1);

                    b.HasKey("CONTROL_ACCOUNT_ID");

                    b.HasIndex("GL_C_ACCOUNT_id");

                    b.ToTable("GL_CHART_OF_ACCOUNTs");
                });

            modelBuilder.Entity("Task_111.Models.GL_CONTROL_ACCOUNTS", b =>
                {
                    b.Property<int>("CHART_OF_ACCOUNT_ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BS_CR_ACC_ID")
                        .HasMaxLength(16);

                    b.Property<int?>("BS_DR_ACC_ID")
                        .HasMaxLength(16);

                    b.Property<string>("CHART_OF_ACCOUNT_CODE")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("CREATED_BY");

                    b.Property<DateTime>("CREATION_DATE");

                    b.Property<string>("DESCRIPTION")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("FOR_COST_CENTER")
                        .HasMaxLength(50);

                    b.Property<string>("FOR_PROJECTS")
                        .HasMaxLength(50);

                    b.Property<int?>("IN_ACTIVE")
                        .HasMaxLength(1);

                    b.Property<int?>("LAST_UPDATED_BY");

                    b.Property<DateTime?>("LAST_UPDATE_DATE");

                    b.Property<int?>("NOTES")
                        .HasMaxLength(16);

                    b.Property<int?>("PARENT_CONTROL_ACCOUNT_ID");

                    b.Property<string>("SEGMENT1")
                        .HasMaxLength(250);

                    b.Property<string>("SUB_ACCOUNT_CODE")
                        .HasMaxLength(50);

                    b.HasKey("CHART_OF_ACCOUNT_ID");

                    b.ToTable("GL_CONTROL_ACCOUNTs");
                });

            modelBuilder.Entity("Task_111.Models.GL_CHART_OF_ACCOUNTS", b =>
                {
                    b.HasOne("Task_111.Models.GL_CONTROL_ACCOUNTS", "GL_CONTROL_ACCOUNTS")
                        .WithMany()
                        .HasForeignKey("GL_C_ACCOUNT_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
